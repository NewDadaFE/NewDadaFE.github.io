%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.2 (Build 16C67) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 102 102
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 102 102
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.2 w
0.60000002 i
/Cs1 SC
0.5411765 0.57647061 0.60000002 sc
q
0 0 102 102 rc
1 0 0 -1 1 101 cm
76.171875 0 m
90.625 0 100 9.375 100 23.828125 c
100 76.171875 l
100 90.625 90.625 100 76.171875 100 c
23.828125 100 l
9.375 100 0 90.625 0 76.171875 c
0 23.828125 l
0 9.375 9.375 0 23.828125 0 c
76.171875 0 l
h
S
100 0 0 100 1 1 cm
BI
/Width 300
/Height 300
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcFO*>57phmI'H,l0I<gjkS_Nf%Jg)e(2[edDX/N^;J"%^V[_&a2H*Db0JD]e(3+'gYC]FgtpuEhVd2G
i8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEJ)9,=hVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2G
i8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2I
gtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi.'P=i8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2I
gtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuE
hVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtmP=gtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuE
hVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2G
i8!2IgtpuEhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd0qhVd2Gi8!2IgtpuEhVd2Gi8!2IgtpuEhVd2G
i8!2IgtpuEhVd2Gi8!2Igu%)Ag"Xm'f#l:c`6$6;_oK=&_S3q.`5p-EcI'tee^iF.gYUlIj5oIflL"$.
q"aaDs+14Ks+146s!dmDrTih;f\>6#aiqK:a3)]Td*pRsg"Y<=i8N_XkiqF#mdKc>p%eF[rr0t<JcC<$
JcEXfrr+ABq>0^Tp$V;<kiqEmjQ51Ri7?T9d+$XhcI'ADa2H*Df\>6Jm-X`KrTsQ8s8DtKs7-+'nF?)*
i8Vr+dCd<6b0JDji8O1qntuG<s+13$s.]N-nF?)*i8Mi(dCd<6b0JDji8X7ro)AX`s+14Ks+14KrtP5%
puCN"d+$X[_T'O9bh(S(lKmp;r13k=s+13$s-`m'r;?NYm-WEYgr.=Y]u%e9eCN[BkP+`GJcG]KLAqtV
nF>,agr%1U^;J"=e^rmEkkOrKOoL"4JcC<$NW0C]q>'.8kgJ#5^;Its_oKsPg>)/dnV7(&rsnMen]]>-
_8aUSioBV$o7d3qs+13$s+11[o(2J1io@kpair)Zn*ok+s-!Bin*okkcdKYLalDOHrr.KK!WW1Ns+13$
s+14Is8N!*j6#O@`lZHNddQ\qP5gpL$h*WUbg=hT`l[9'kPkI3s7u\Gs+13$s+14Cs8N!*j6#O@`lZHO
e*lerR/`cX$h*WUbg=hT`l[9&kPkI3s7?8As+13$s+14=s8N!*j5oI?`lZHOe*lhsT)YVd$h*WUbg=hT
`l[9&kPkI3s6]i;s+13$s+147s8N!*j5oI?`lZHOe*lhsV#RIp$h3]Wbg=hT`l[9&k5P@2s6'E5s+13$
s+141s8N!*j5oI?`lZHOe*unuWrK4$#ik%/^Vn1QjlZRAJcF^/JcC<$JcC<$h>dKR#ik%0^Vn1QjlW]F
ZiC%'#h@S]`5p-rp\9=>g])j)JcC<$JcF@%#l")g`5p-Pf\6?'Zi@K6$i'PnaN`&Wdae6mr.4n#s+13$
s+13$s4%&Vqu$B<dacF`chR>3[f<o<#k7BT^r=CNhr0.ddf4muJcC<$JcF$q#i4Cs^r4=`naa6j]`/8u
k3'Ira6N!XJcF'rJcC<$JcC<$bPqk5m-VO)a5c=F]`5kKrr*2Sg"XEcbOkK$JcEsoJcC<$JcC<$aSuP<
p%H;EbLYA$rr0e7`W,r5"j,$9cI15Aqgndhs+13$s+13$s2G!Dqu$B;daZC`d/Nj[s2b3GnF?(b`Q6ik
i.:pGs+13$s+13$s1eR>gtpu)`5q`Kq8iTZrs8Dpq6mrNkiqDas1nYcs+13$s+13_rs7fOlF+@?nF?(m
s3CZDq$"RPaQD^NJcEF`JcC<$JcC<$\c2islKc7)aSu"\s3^lGrWUEgd+mL9JcE=]JcC<$JcC<$[f6Nd
hVcN#d/O$ls3^iMf%Jg'daWjJ\,V$ZJcC<$JcE(V"jYQGf%Jg*s4%&PjQ>XCaNOS[JcE4ZJcC<$JcC<$
Zi:=.r;=IRbN%aJeGn/##k7BT^;J"`p%Et:[/Y^WJcC<$JcDtS#k[f`^;J"\nab<3gA_HRq>%hFaQi*Y
JcE"TJcC<$JcC<$XoA[lm-VU,aS>T,gAg"/rr!#Ac-P5'iIV$3s+13$s+13$s/Q)&h;@24c-QCfh>c=2
"k;2YcdUEqs/Z0Ns+13$s+13Jrrp`se^`=+h>cF5#ik%/`6$7#r;;-GX8dbNJcC<$JcDYJ#lFPt`5p-^
jlYM$j8TDSnaaH5a7o?'JcD\KJcC<$JcC<$V#L_pp\;MAa7/Wij8\0>"jG?Bj5oESs/#aHs+13$s+13D
rrqHEkKM<%j8\9A"n;'Q_8XOqrdk*Gs+13$s+13$s.TJlrWU-Xam\cik5XTD"jG?Bj5oESs.]OEs+13$
s+13ArrqHEkKM<%k5X]G"n2!O_8aUrrdk*Ds+13$s+13$s.98irWU-Xam\cil2U#J"jG?Bj5oESs.B=B
s+13$s+13>rrqHEkKM<%l2U,M"n2!O_8aUrrdk*As+13$s+13$s-s&frWU-Xam\`hm/QGP"jG?Bj5oES
s.'+?s+13$s+13;rrqHEkKM<%m/QPS"n2!O_8aUrrdk*>s+13$s+13$s-WicrWU-Xam\`hn,MkV"jG?B
j5oHTs-`n<s+13$s+138rrqHFkKM9#n,MtY"n1sN_8aUrrdk*;s+13$s+13$s-<W`rWU-Xam\`ho)J:\
"jG?Bj5oHTs-E\9s+13$s+135rrqHFkKM9#o)JC_"n1sN_8aUrrdk*8s+13$s+13$s-!E]rWU-Xam\`h
p&F^b"kVJ`hr<[Is-*J6s+13$s+132rrq<>j4E#?p&F^b"iJC(o(2I(s-*J6s+13$s+132rrqubo>AVl
p&Fge"o%cd^;J!Bs,d83s+13$s+13/rrp-Sa7o?'q#C-h"lnb.dFHj"s,d83s+13$s+13/rrpj$fAl#V
q#C-h"jkcMjQ>ZWs,d83s+13$s+13/rrqNIkg7i1q#C-h"hhdmq"XZ9s,d83s+13$s+13/rrr2nq7XYb
rr2fpqu6iio(0f@bCT\Qs+13$s+13$s,$aZ`6$6mnacSWqu6iUi8WABgk#Kbs+13$s+13$s,$aZf@o$9
i8XY6qu6iCcdD%Em=G:ss+13$s+13$s,$aZlKmo\cI)Ohrr30"r;F:E`;][cs,I&0s+13$s+13,rs8Q#
rOftbr;?Nms8N$%lg4#]cI%4CMZ88-JcC<$JcCK)"j5-<lg4$<s8N$%f\>6<i8K7eMZ88-JcC<$JcCK)
"l8+qf\>6]s8N$%`6$6mna_82MZ88-JcC<$JcCK)"n;'Q`6$7&rrr2nq7abeJcCN*JcC<$JcC<$KDu+h
_oMQJq$$0Rn&ir'JcCN*JcC<$JcC<$KDu+tcI)%Imfhn=lHn&3JcCN*JcC<$JcC<$KDu,%eCNgHl36/,
jjr,>JcCN*JcC<$JcC<$KDu,+g"YKGjTXDqi8!2IJcCN*JcC<$JcC<$KDu,1hVd/Fi!%]bgZ%;UJcCN*
JcC<$JcC<$KDu,7jQ4tGgBGsQf')AaJcCN*JcC<$JcC<$KDu,=l0H[EeHO+@dI-JmJcCN*JcC<$JcC<$
KDu,Cn*nKFd07J0bObB!JcCN*JcC<$JcC<$KDu,Ho_$/Db6>Vta8,Q-JcCN*JcC<$JcC<$KDu,Nq>.hC
`r`fd_Z'Ocs+gW*s+13$s+13&s8N!!\\Gu_^;J!Bs+LE's+13$s+13$rr`;8_oDhsaio>9K`?W'JcC<$
JcC<$"96<]bQ>r4d=M=Ns+13$s+13$s+11Ps2rX7!moHJJcCE'JcC<$JcC<$Jc>iPd+$VJf%Jf/s+LE'
s+13$s+13$rr`;Pg"QS`hr0.dK`?W'JcC<$JcC<$"9706i<%cji.:o]s+13$s+13$s+11Ps4lJh!o)Si
JcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705
hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$
rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$
JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]
s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\Ii
hV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iP
gtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$
s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'
JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>
s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh
!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$
"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$
s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'
JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zi
i.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;V
hV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$
Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$
s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tb
K`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprj
gYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11P
s4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$
JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE'
s+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)Si
JcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705
hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$
rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$
JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]
s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\Ii
hV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iP
gtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$
s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'
JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>
s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh
!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$
"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$
s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'
JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zi
i.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;V
hV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$
Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$
s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tb
K`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprj
gYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11P
s4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$
JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE'
s+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)Si
JcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705
hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$
rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$
JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]
s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\Ii
hV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iP
gtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$
s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'
JcC<$JcC<$"9705hu_Zii.:o]s+13$s+13$s+11Ps4lJh!o)SiJcCE'JcC<$JcC<$Jc>iPgtprjgYUk>
s+LE's+13$s+13$rr`;VhV\IihV`tbK`?W'JcC<$JcC<$"9705hu_]ji.:o]s+13$s+13$s+11Ps4lMj
!nQ&ZJcCE'JcC<$JcC<$Jc>iPf%JdZd*pQss+LE's+13$s+13$rr`;Je(+TCcI%4CK`?W'JcC<$JcC<$
"96Nhd/q8-bCT\Hs+13$s+13$s+11Ps2<%'!kuRmJcCE'JcC<$JcC<$Jc>iP^;Itm\\H#\rdk*)s+13$
s+13$s+C@NrW9XF_?IZka8,Q-JcCN*JcC<$JcC<$KDu,Nq>.hC`s'E'bk(K"JcCN*JcC<$JcC<$KDu,H
o_$/EbQZ/7dI$AjJcCN*JcC<$JcC<$KDu,BmdJ<Dd07nGf')AaJcCN*JcC<$JcC<$KDu,=l0H^FecjXX
gZ%;UJcCN*JcC<$JcC<$KDu,6j5nkFgBHBhi8!2IJcCN*JcC<$JcC<$KDu,1hVd2Gi!&*"jjr,>JcCN*
JcC<$JcC<$KDu,+g"YKGjTXi3lHn&3JcCN*JcC<$JcC<$KDu,%e(3aIlNQ\Dn&ir'JcCN*JcC<$JcC<$
KDu+tcI)%In,E+a^;IsAs+gW*s+13$s+13&rrp-Sa8#K+rr3/@ais8Enq$gus+13$s+13$s+^OWnF?(f
aisbarr3/SgYL]DiIV#ds+13$s+13$s+^OWh;I8EgYMl/rr3/fm-Vs@d=M=Ts+13$s+13$s+^OWb0JE#
m-XfPrr30"r;F:E`;][cs,I&0s+13$s+13,s8Mp"]YVPar;HWpqu6iCcdD%Em=G:ss+13$s+13$s,$aZ
lKmo]cdDXiqu6iVi8WABgk#Kbs+13$s+13$s,$aZf@o$9i8XY6qu6iio(0f@bCT\Qs+13$s+13$s,$aZ
`6$6mnacSWq#:N2_T)?FpjrI,s+13$s+13$s,?s]q"XZu_T)BNq#:NFeCWdDkCNYps+13$s+13$s,?s]
jQ>[QeCOEpq#:NXk3(.Bf7Es`s+13$s+13$s,?s]dFHk/k3)O>q#:Nlp\;J?a+=8Ps+13$s+13$s,?s]
^;J"cp\=O`p&>35aNO,Eo7?q*s+13$s+13$s,[0`o(2Ija34/Up&>3Ig>(TFj+75os+13$s+13$s,[0`
hr<\Jg>)B$p&>3anF=?7ao;9js-E\9s+13$s+135s8N!$_8aUcnF?2Oo)Am;d*q%:kCNZ!s+13$s+13$
s-!Bcj6#OKcdMCao)Am^naXH8ao;9js-`n<s+13$s+138s8N!$_8aUcnF?)Ln,ER8d*q%:k(3Q#s+13$
s+13$s-<Tfj6#OKcdM:^n,ER[naXH8ao;9js.'+?s+13$s+13;s8N!$_8aUcnF>uIm/I75d*q%:k(3Q&
s+13$s+13$s-Wfij5oIJd*q@]m/I7XnaXH8ao;9js.B=Bs+13$s+13>s8N!$_8aUcnaYuGl2Lq2d*q%:
k(3Q)s+13$s+13$s-s#lj5oIJd*q7Zl2LqUnaXH8ao;9js.]OEs+13$s+13As8N!$_8aUcnaYlDk5PV/
d*q%:k(3Q,s+13$s+13$s.95oj5oFId*q.Wk5PVSnaaN8ao;9js/#aHs+13$s+13Ds8N!$_8aUcnaYcA
j8T;,d*q%:k(3Q/s+13$s+13$s.TGrj5oFId*q%Tj8TDSnaaH5a7o?'JcD\KJcC<$JcC<$V#L_pp\;MA
a7/Wij8\';#ik%/`5p.!r;;-GX8dbNJcC<$JcDYJ#lFPt`5p-^jlYM$h>[Z/f\4["eUdb$s+13$s+13$
s/5l#cdL@of\50]h>dKR"j"s7h;@1Bs/uBQs+13$s+13Mrrq69iQ09irr([QgA_HRq>%hFaQi*YJcE"T
JcC<$JcC<$XoA[llg;L,aS>T,gAfe)#k7BT^;J"`p%<n9[/Y^WJcC<$JcDtS#k[f`^;J"\nab<3eGf^5
k3'Y'bPqBis0r#Zs+13$s+13Vs8Mm!_oU$^k3(7odJjC$g"Xg#e:IY/s+13$s+13$s0M_/cI14ng"XpS
dJs4F"j,$9gtpt?s185]s+13$s+13Yrrq37i5s6jrr1=FcN!n>"i/*ukiqDas1SG`s+13$s+13\rrqQK
l+k6YrqXk>bPqk<o(0<%^ZObEJcEOcJcC<$JcC<$]`/9$l0Gdj^\IU"bQ#Z`#l+2j^r4=LhV`tb_uG;f
JcC<$JcELb#i+:p^r=Canaad$`W,r5"j,$9cI15Aqgndhs+13$s+13$s2G$;qZY9neB,t^rqXP5_Z0W7
#hI\`_oU$np%<n9bl<7oJcC<$JcEgk#k[f`_oU$Pg"ZN*_Z.:K#it.2^;J"Vlg99'ci8RrJcC<$JcEpn
#jUaC^;J"Pk3'DW\c2s)naaK7aPGb4JcF0uJcC<$JcC<$cMn1+hr2AiaRJ`j\c9,<$i'PnaNVuVdae6m
r.4n#s+13$s+13$s4%&Vqu$B<e()OachR>3[f<]6rr*2Rf\49bbP1c+JcFL)JcC<$JcC<$fDc-Np\;\K
bgb;!rr'2'XoA[ejlX=ra5c:Drr.KKiW"K/JcC<$JcFR+rr*2`jlX=ra5c:DXoGF$$h3]Wbg=hT`Q@0%
k5P@2s6'E5s+13$s+141s8N!*j5oF>`Q??Ne*unuWrJmp$h3]Wbg=hT`l[9&k5P@2s6]i;s+13$s+147
s8N!*j5oF>`lZHOe*unuV#R%d$h*WUbg=hT`l[9&k5P@2s7?8As+13$s+14=s8N!*j5oF>`lZHOe*lhs
T)Y2X$h*WUbg=hT`l[9&k5P@2s7u\Gs+13$s+14Cs8N!*j5oI?`lZHOe*lhsR/`?L$h*WUbg=hT`l[9&
kPkI3rrN0"JcC<$JcC<$qu?Zp$fg@3_8aU@d*qIRnWNp2rsnMfn]]A/_8aUSioBS"o7d3qs+13$s+11[
o(2J1io@kpair,\n*ok+s+^Ofn*ol!g>'TebJ(m7dFHk0k3)L6plYT-s+13$s,I$dq"X[Gk314Cf=o/C
#fF^+f@o$KnF;85JcG]K'_h@sj6#OPeCVCN`l,sAf@o$Fm-XfMSc=9@JcC<$RK*9a'^G&Pf@o#uaNM96
`mE5dj6#P!p\9=>rVqHKnc'<no(1_rilfZq]YVP/cI(J+iUHC.VZ25IJcC<$UAkqsnabMoiQBHn]YVP0
cdCS,iplU2p&BUCrVqHKkl3+0r;GsJmF^1L`Q??<_oBjEdEpCof%Jg5hVdDSjlkspmI'H7o_&%UqYpK7
s+13$s+13fs8N!Hq>'mYo_%Y@nEB-&ioK4VhVcu<gX+I$b0JDK_oK^;bh1\+lg4$:r;H!^JcG]KJcFO*
rqTX_mdK?'lJ^dbgtpu?g"Xm&f#l:c`6$6;_oK=&_S3q.`5p-EcI("ff%/O/gtpuDhVd/Fi7m,HgYUlC
hVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd.<hVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlC
hVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/F
i7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HJ(ri<gYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/F
i7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,H
gYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChLFJ<hVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,H
gYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlC
hVd/Fi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7hSpi7m,HgYUlChVd/Fi7m,HgYUlChVd/Fi7m,HgYUlC
hVd/Fi7m,HgYUlDhr3/>gX+I$b0JDQaiqK:a18t%^;J"0aNM`OdEp@nf%Jg4hVdAQjlbmnmI'H<q>&tK
JcG]KJ,
~> %APLeod
EI
ep
end
%%Trailer
%%EOF
